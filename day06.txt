day06
0.복습
1)연산자
	최 단 산 쉬 관 리 삼 대

-삼항연사자(?:)
	조건식 ? 참일 때의 값 : 거짓이 때의 값

-비트연산자
	bit : 정보량의 최소단위(0, 1)
	1bite -> 8bit = 1byte 정보의 기본단위

	10진수 -> 2진수
	10 -> 1010

-논리연산자
	일반적인 논리연산자 => true && true, true || false, !true
	비트 논리연사자 =>	&	두 비트가 모두 1이면 1
			|	두 비트 중 하나라도 1이면 1
			^	두 비트가 서로 다르면 1
			~	비트가 0이면 1, 1이면 0(부호도 바뀜)
				~ㅜ = -(n+1)

-쉬프트 연산자
	좌 쉬프트 A << B	: A의 비트를 왼쪽으로 B만큼 이동시킨다
			오른쪽에 생기는 빈칸은 0으로 채운다
			지정된 비트수를 넘어가면 잘린다
	
	우 쉬프트	A >> B	: A의 비트를 오른쪽으로 B만큼 이동시킨다
			왼쪽에 생기는 빈칸은 부호비트에 따라 달라진다(양수 0, 음수 1로 채움)
			이동 중 잘린 비트는 삭제 된다

2) 제어문
	프로그램의 흐름을 제어한다
	
	조건문	조건식의 결과(true, false)에 따라 실행흐름을 결정한다
		if문, switch문
	반복문	특정조건을 만족할 때까지 실행코드를 반복 실행한다
		for문, while문, do~while문
	키타 제어문	흐름을 건너뛰거나 즉시 종료한다
		break문, continue문

--------------------------------------------------------------------------
1.반복문
1) do~while문
	while문과 동일하지만 최소 한번은 무조건 실행해야 할 때 사용한다

	do{
		실행할문장;
	}while(조건식);

2)이중 for문
	하나의 반복문 안에 또 다른 반복문을 포함하는 구조
	
	for(초기식; 조건식; 증감식){	//바깥for문
		for(초기식; 조건식; 증감식){	//안쪽for문
			실행할 코드
		}
	}	

	바깥for문(행)	바깥 for문이 1번실행될 때
	안쪽for문(열)	안쪽 for문은 조건식이 false가 될 때까지 실행된다
  for(int i = 1; i < 3; i++){
      for(int j = 1; j < 3; j++){
         syso("안쪽for문");
      }
      syso("i = " + i + ", j = " + j);
   }
   
   i = 1   1 < 3   t   j = 1    1 < 3    t   => i = 1, j = 1
   i = 1   1 < 3   t   j = 2   2 < 3   t   => i = 1, j = 2
   i = 1   1 < 3   t    j = 3   3 < 3   f   => x
   i = 2   2 < 3   t   j = 1   1 < 3   t   => i = 2, j = 1
   i = 2   2 < 3   t   j = 2   2 < 3   t   => i = 2, j = 2
   i = 2    2 < 3   t   j = 3   3 < 3   f   => x
   i = 3   3 < 3   f            => 다음 문장 출력

2.기타 제어문
	반복문에서 사용한다.
	단, break는 switch에서도 사용한다

1) break문
	즉시 해당 중괄호 영역을 탈출한다
	아래 코드를 실행시키지 않는다

2) continue문
	즉시 다음 반복문으로 넘어간다
	아래 코드를 실행시키지 않는다




























	